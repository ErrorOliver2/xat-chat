{"version":3,"file":"js/vendors.a5214367fc20e0483d1f.js","mappings":"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","sources":["webpack://xat-recreation/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://xat-recreation/./node_modules/engine.io-parser/build/esm/commons.js","webpack://xat-recreation/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://xat-recreation/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://xat-recreation/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://xat-recreation/./node_modules/engine.io-parser/build/esm/index.js","webpack://xat-recreation/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/globals.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/util.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/transport.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://xat-recreation/./node_modules/engine.io-client/build/esm/socket.js","webpack://xat-recreation/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://xat-recreation/./node_modules/socket.io-parser/build/esm/binary.js","webpack://xat-recreation/./node_modules/socket.io-parser/build/esm/index.js","webpack://xat-recreation/./node_modules/socket.io-client/build/esm/on.js","webpack://xat-recreation/./node_modules/socket.io-client/build/esm/socket.js","webpack://xat-recreation/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://xat-recreation/./node_modules/socket.io-client/build/esm/manager.js","webpack://xat-recreation/./node_modules/socket.io-client/build/esm/index.js","webpack://xat-recreation/./node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["re","parts","parse","str","length","src","b","indexOf","e","substring","replace","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","names","split","slice","splice","queryKey","query","data","$0","$1","$2","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","lookup","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","then","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","c","l","utf8Length","Math","ceil","randomString","Date","now","random","TransportError","Error","constructor","reason","description","context","super","Transport","writable","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","_query","hostname","port","secure","Number","encodedQuery","encodeURIComponent","_polling","name","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","unloadHandler","attachEvent","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","pow","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","_writer","getWriter","read","done","polling","assign","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","o","map","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}