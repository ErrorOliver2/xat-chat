class VoteComponent{constructor(t){this.options=Object.assign({container:null,onVote:null,maxVotes:1,duration:6e4,theme:"light"},t),this.votes={},this.voters=[],this.active=!1,this.timeRemaining=this.options.duration,this.timer=null,this.init()}init(){this.options.container?(this.render(),this.attachEvents()):console.error("VoteComponent: No container element provided")}render(){this.options.container.innerHTML=`\n            <div class="vote-component ${this.options.theme}">\n                <div class="vote-header">\n                    <h3 class="vote-title">Vote</h3>\n                    <div class="vote-timer">\n                        <span class="vote-timer-value">00:00</span>\n                    </div>\n                </div>\n                <div class="vote-options"></div>\n                <div class="vote-footer">\n                    <button class="vote-button vote-submit" disabled>Submit</button>\n                    <button class="vote-button vote-cancel">Cancel</button>\n                </div>\n            </div>\n        `,this.updateTimer()}attachEvents(){const t=this.options.container,e=t.querySelector(".vote-submit"),o=t.querySelector(".vote-cancel");e.addEventListener("click",()=>this.submitVote()),o.addEventListener("click",()=>this.cancel())}setOptions(t){this.options=Object.assign({},this.options,t),this.render()}start(t){this.active&&this.stop(),t&&this.setOptions(t),this.active=!0,this.votes={},this.voters=[],this.timeRemaining=this.options.duration,this.timer=setInterval(()=>{this.timeRemaining-=1e3,this.updateTimer(),this.timeRemaining<=0&&(this.stop(),this.announceResults())},1e3),this.updateTimer(),this.render()}stop(){this.active=!1,clearInterval(this.timer),this.timer=null}updateTimer(){if(!this.options.container)return;const t=this.options.container.querySelector(".vote-timer-value");if(!t)return;const e=Math.floor(this.timeRemaining/6e4),o=Math.floor(this.timeRemaining%6e4/1e3);t.textContent=`${e.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`}addVoteOption(t,e){if(!this.active)return;const o=this.options.container.querySelector(".vote-options"),i=document.createElement("div");i.className="vote-option",i.innerHTML=`\n            <input type="checkbox" id="vote-option-${t}" value="${t}" class="vote-checkbox">\n            <label for="vote-option-${t}">${e}</label>\n            <span class="vote-count">0</span>\n        `,o.appendChild(i),i.querySelector(".vote-checkbox").addEventListener("change",()=>this.updateSelection())}updateSelection(){const t=this.options.container.querySelectorAll(".vote-checkbox"),e=this.options.container.querySelector(".vote-submit");let o=0;t.forEach(t=>{t.checked&&o++}),e.disabled=0===o||o>this.options.maxVotes}submitVote(){if(!this.active)return;const t=this.options.container.querySelectorAll(".vote-checkbox"),e=[];t.forEach(t=>{t.checked&&(e.push(t.value),this.votes[t.value]||(this.votes[t.value]=0),this.votes[t.value]++,t.parentElement.querySelector(".vote-count").textContent=this.votes[t.value])}),this.options.onVote&&"function"==typeof this.options.onVote&&this.options.onVote(e),t.forEach(t=>{t.checked=!1}),this.updateSelection()}cancel(){this.stop(),this.options.container&&(this.options.container.innerHTML="")}announceResults(){const t=Object.entries(this.votes).map(([t,e])=>({option:t,count:e})).sort((t,e)=>e.count-t.count);console.log("Vote results:",t)}}window.VoteComponent=VoteComponent;